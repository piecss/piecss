// Copyright (C) 2014 Babs GÃ¶sgens. Licensed under MIT; see LICENSE.txt


// Content:
// 1. Functions
//    -rhythm-units
//    rhythm
// 2. Mixins
//    2a. Vertical Rhythm:
//        vrhythm
//    2b. Horizontal Rhythm:
//        hrhythm
//    2c. Miscellaneaous;
//        debug-rhythm


// 1. Functions

///
/// Calculates a value based on the [$rhythm](./#variable-rhythm).
///
/// @since 0.1
/// @access private
///
/// @param {Int | Fraction} $units (1) - The number of -rhythm-units (whole or fraction) to span
///
/// @return {Number} - The calculated span in px
///

@function -rhythm-units($units: 1) {
  @return $rhythm * $units;
}

///
/// Find the optimal rhythm units for a given size in px.
/// If the specified span is too small for the size, find the next best one
/// based on a specified increment.
///
/// @since 0.1
///
/// @param {Number} $units - The number of rhythm units to span (whole or fraction), 1 equals 1 $rhythm
///
/// @return {Number} - The calculated rhythm in px
///

@function rhythm($units: 1) {
  // @todo error handling
  @return -rhythm-units($units);
}


// 2. MIXINS

///
/// Use for left and right margins and paddings. Uses  [$gutter-width](./#variable-gutter-width) declared in grid settings
///
/// @example
///  @include rhythm(1, padding-left);
///
/// @since 0.1
///
/// @param {Number} $units - The fraction of the gutter measurement
/// @param {String} $property - The property to be set, e.g. padding, margin-left
/// @param {Number} $context (16px) - The font-size context
///

@mixin rhythm($units, $property, $context: $font-size) {
    // @if strip-unit($units)==0 {
    //     #{$property}: 0;
    // }
    // @if unit($unit)==rem {
    //     #{$property}: $units*$gutter-width;
    // }
    // #{$property}: rhythm($units, $context);
}


///
/// Reveals the document's vertical rhythm. Will automatically be mixed in when [$debug-rhythm](./#variable-debug-rhythm) is set to true.
///
/// @since 0.1
///
/// @param {Number} $rhythm - The rhythm height
///

// scss-lint:disable ImportantRule DuplicateProperty
@mixin debug-rhythm($rhythm: $rhythm) {
  $to: transparent;
  $from: rgba($lightcyan, .5);

  background-image: linear-gradient($from 50%, $to 50%);
  background-size: (2 * $rhythm) (2 * $rhythm);

  * {
    background-image: none !important;
    background-color: transparent !important;
    outline: rgba($fuchsia, .1) dotted 1px;
    outline: $lightgray dotted 1px;
    @include old-ie {
      outline: lighten($fuchsia, .1) dotted 1px \9;
    }
  }
}
// scss-lint:enable ImportantRule DuplicateProperty
